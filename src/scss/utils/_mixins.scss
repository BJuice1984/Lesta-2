/* stylelint-disable */
@import "./variables";
/* stylelint-enable */

@mixin reset {
  margin: 0;
  padding: 0;
}

@mixin reset_button {
  outline: none;
  border: none;
  background: transparent;

  @include reset();
}

@mixin text {
  text-rendering: optimizelegibility;
  text-decoration: none;
  letter-spacing: 0;
  font-style: normal;
  cursor: default;
}

@mixin text-format($font-size, $font-weight, $line-height) {
  font-size: $font-size;
  font-weight: $font-weight;
  line-height: $line-height;
}

@mixin _button() {
  border-radius: 11px;
  color: $white;
  text-align: center;
  transition: 0.3s ease;
  box-sizing: border-box;
  border: 1px solid transparent;
}

@mixin button_type_fill-white {
  @include _button();
  color: $colorTextWhite;
  background-color: $colorTextOrange;

  &:hover {
    background-color: transparent;
    border: 1px solid $colorTextWhite;
    color: $colorTextOrange;
  }
}

@mixin media-breakpoint-up($breakpoint) {
  $min-width: map-get($breakpoints, $breakpoint);

  @media (min-width: $min-width) {
    @content;
  }
}

@mixin container-max-widths {
  @each $breakpoint, $size in $container-max-widths {
    @include media-breakpoint-up($breakpoint) {
      max-width: $size;
      margin-left: auto;
      margin-right: auto;
    }
  }
}

@mixin media($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (max-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Breakpoint #{$breakpoint} не найден в переменной $breakpoints";
  }
}
